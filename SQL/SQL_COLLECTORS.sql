CREATE DATABASE IF NOT EXISTS Collectors;
USE Collectors;

DROP TABLE IF EXISTS collezionista;
DROP TABLE IF EXISTS collezione;
DROP TABLE IF EXISTS disco;
DROP TABLE IF EXISTS immagine;
DROP TABLE IF EXISTS copiaDisco;
DROP TABLE IF EXISTS etichetta;
DROP TABLE IF EXISTS traccia;
DROP TABLE IF EXISTS autore;
DROP TABLE IF EXISTS genere;
DROP TABLE IF EXISTS condivide;
DROP TABLE IF EXISTS d_Compone;
DROP TABLE IF EXISTS t_Compone;
DROP TABLE IF EXISTS d_Genere;
DROP TABLE IF EXISTS a_Genere;
DROP TABLE IF EXISTS produce;


CREATE TABLE collezionista (
	ID INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	nickname VARCHAR(50) NOT NULL UNIQUE,
	email VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE collezione (
	ID INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	nome VARCHAR(50) NOT NULL,
	pubbPriv ENUM('Pubblica','Privata') NOT NULL DEFAULT 'Privata',
	ID_Collezionista INTEGER UNSIGNED,
	CONSTRAINT collezione_Collezionista FOREIGN KEY (ID_Collezionista)
		REFERENCES collezionista (ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE disco (
	ID INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	titolo VARCHAR(100) NOT NULL,
	annoDiUscita CHAR(4) NOT NULL,
	barcode VARCHAR(13),
	ID_Collezione INTEGER UNSIGNED,
	CONSTRAINT disco_Collezione FOREIGN KEY (ID_Collezione)
		REFERENCES collezione (ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE copiaDisco (
	ID INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	statoConservazione ENUM('Nuovo','Usato'),
	formato ENUM('CD','Vinile','Digitale','Cassetta'),
	ID_Disco INTEGER UNSIGNED NOT NULL,
	CONSTRAINT copiaDisco_Disco FOREIGN KEY (ID_Disco)
		REFERENCES disco (ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE immagine (
	URL VARCHAR(500) PRIMARY KEY,
	tipologia VARCHAR(50),
	ID_Disco INTEGER UNSIGNED NOT NULL,
	CONSTRAINT immagine_Disco FOREIGN KEY (ID_Disco)
		REFERENCES disco (ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE etichetta (
	nome VARCHAR(100) NOT NULL PRIMARY KEY
);

CREATE TABLE traccia (
	ID INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	titolo VARCHAR(100) NOT NULL,
	durata TIME,
	ID_Disco INTEGER UNSIGNED NOT NULL,
	CONSTRAINT traccia_Disco FOREIGN KEY (ID_Disco)
		REFERENCES disco (ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE autore(
	ID INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	pseudonimo VARCHAR(100) NOT NULL UNIQUE,
	nome VARCHAR(100),
	cognome VARCHAR(100), 
	dataDiNascita DATE,
	gruppoSingolo ENUM('Gruppo','Singolo') NOT NULL
);

CREATE TABLE genere (
	nome VARCHAR(50) NOT NULL PRIMARY KEY
);

CREATE TABLE condivide (
    ID_Collezione INTEGER UNSIGNED NOT NULL,
    ID_Collezionista INTEGER UNSIGNED NOT NULL,
    CONSTRAINT condivide_Collezione FOREIGN KEY (ID_Collezione)
        REFERENCES collezione (ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT condivide_Collezionista FOREIGN KEY (ID_Collezionista)
        REFERENCES collezionista (ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (ID_Collezione, ID_Collezionista)
);

CREATE TABLE d_Compone (
	ruolo VARCHAR(50) NOT NULL,
	ID_Disco INTEGER UNSIGNED NOT NULL,
	ID_Autore INTEGER UNSIGNED NOT NULL,
	CONSTRAINT compone_Disco FOREIGN KEY (ID_Disco)
		REFERENCES disco (ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT dCompone_Autore FOREIGN KEY (ID_Autore)
		REFERENCES autore (ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (ID_Disco, ID_Autore, ruolo)
);

CREATE TABLE t_Compone (
	ruolo VARCHAR(50) NOT NULL,
	ID_Traccia INTEGER UNSIGNED NOT NULL,
	ID_Autore INTEGER UNSIGNED NOT NULL,
	CONSTRAINT compone_Traccia FOREIGN KEY (ID_Traccia)
		REFERENCES traccia (ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT tCompone_Autore FOREIGN KEY (ID_Autore)
		REFERENCES autore (ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (ID_Traccia, ID_Autore, ruolo)
);	

CREATE TABLE d_Genere (
	ID INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	ID_Disco INTEGER UNSIGNED NOT NULL,
	nomeGenere VARCHAR(50) NOT NULL,
	CONSTRAINT dGen_Disco FOREIGN KEY (ID_Disco)
		REFERENCES disco (ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT dGen_Genere FOREIGN KEY (nomeGenere)
		REFERENCES genere (nome)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE a_Genere (
	ID INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	ID_Autore INTEGER UNSIGNED NOT NULL,
	nomeGenere VARCHAR(50) NOT NULL,
	CONSTRAINT aGen_Autore FOREIGN KEY (ID_Autore)
		REFERENCES autore (ID)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT aGen_Genere FOREIGN KEY (nomeGenere)
		REFERENCES genere (nome)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE produce(
	ID INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	nomeEtichetta VARCHAR(100) NOT NULL,
	ID_Disco INTEGER UNSIGNED NOT NULL,
	CONSTRAINT produce_Etichetta FOREIGN KEY (nomeEtichetta)
		REFERENCES etichetta (nome)
		ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT produce_Disco FOREIGN KEY (ID_Disco)
		REFERENCES disco (ID)
		ON DELETE CASCADE ON UPDATE CASCADE
);